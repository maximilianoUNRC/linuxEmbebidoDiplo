1) Ejmeplo 1 - Linux Embebidos
Resolucion: 
        #!/bin/ash
        echo "Se muestra en pantalla esta linea"
        $(echo "contenido a colocar en el archivo maxi" > archivo_maxi.txt)
        $(chmod 777 archivo_maxi.txt)
        echo "Se escribio... "
        cat archivo_maxi.txt

2) Ejemplo 2 - Linux Embebidos
Resolucion: 
        #!/bin/ash
        echo "Comienzo del bucle"
        for i in $(seq 0 5)
        do
	        echo $(date -u)
	        $(sleep ls)
        done
        echo "Fin del bucle"

3) Ejemplo 3  - Linux Embebidos
Resolucion:
        #!/bin/ash
        local var1
        var1="texto"
        if [ ${var1} = "texto" ]
        then 
	        echo "Dentro del if"
        fi

4) Ejemplo 4 - Linux Embebidos.
Resolucion:
    #!/bin/ash
    if [ -f /tmp/2015-10-09.txt ]
    then
	    echo "El archivo existe."
    else
	    echo "El archivo no existe."
    fi 

5) Ejemplo 5 - Linux Embebidos.
Resolucion: 
    #!/bin/ash
    while true 
    do
	    echo $( date -u)
	    $(sleep ls)
    done

6) Ejemplo 6 - Linux Embebidos.
Resolucion:
    #!/bin/ash
    local variable1
    variable1 = "texto"

    while true
    do 
	    $(sleep ls)
	    echo ${variable1}
    done

7) Ejemplo 7 - Linux Embebidos.
Resolucion: 
    #!/bin/ash

    local hora
    hora=$(date)
    $(sleep 10)

    while true
    do
	    echo ${hora}
	    hora=$(date)
	    $(sleep 1s)
    done

PROBLEMAS INTEL GALILEO.

1) Crear un programa que prenda un led cuando se presione algún pulsador.
Nota: Usar GPIO3 para la salida del led

    #!/bin/ash
    #Inicializacion de estados
    echo -n "55" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio55/direction
    echo -n "1" > /sys/class/gpio/gpio55/value #HIGH

    echo -n "39" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio39/direction

    echo -n "26" > /sys/class/gpio/export
    echo -n "in" > /sys/class/gpio/gpio26/direction

    #iteracion de actuacion
    while true
    do 
	    if [ $(cat /sys/class/gpio/gpio26/value) = 1 ]
	    then 
		    echo -n "1" > /sys/class/gpio/gpio39/value #On
	    else
		    echo -n "0" > /sys/class/gpio/gpio39/value #Off
	    fi
    done

2) Agregar al programa anterior el uso de un Buzzer, mediante la implementación
del módulo PWM
Nota: Usar en modo salida el D5 del Shield de expansión

    #!/bin/ash

    #Inicializacion de estados
    echo -n "55" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio55/direction
    echo -n "1" > /sys/class/gpio/gpio55/value #HIGH

    echo -n "39" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio39/direction

    echo -n "26" > /sys/class/gpio/export
    echo -n "in" > /sys/class/gpio/gpio26/direction

    echo -n "5" > /sys/class/pwm/pwmchip0/export
    echo -n "1" > /sys/class/pwm/pwmchip0/pwm5/enable

    echo -n "0" > /sys/class/pwm/pwmchip0/pwm5/duty_cycle
    echo -n "1000000" > /sys/class/pwm/pwmchip0/pwm5/period

    #iteracion de actuacion
    while true
    do 
	    if [ $(cat /sys/class/gpio/gpio26/value) = 1 ]
	    then 
		    echo -n "1" > /sys/class/gpio/gpio39/value #On
		    echo -n "500000" > /sys/class/pwm/pwmchip0/pwm5/duty_cycle	
	    else
		    echo -n "0" > /sys/class/gpio/gpio39/value #Off
		    echo -n "0" > /sys/class/pwm/pwmchip0/pwm5/duty_cycle
	    fi
    done


3) Reutilizando el código anterior, modificar el periodo o frecuencia del tono
mediante el uso del conversor A/D.
Nota: Usar el la entrada A0 del Shield de expansión

    #!/bin/ash

    #local var

    local variable
    variable=0

    #Inicializacion de estados
    echo -n "55" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio55/direction
    echo -n "1" > /sys/class/gpio/gpio55/value #HIGH

    echo -n "39" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio39/direction

    echo -n "26" > /sys/class/gpio/export
    echo -n "in" > /sys/class/gpio/gpio26/direction

    echo -n "5" > /sys/class/pwm/pwmchip0/export
    echo -n "1" > /sys/class/pwm/pwmchip0/pwm5/enable

    echo -n "0" > /sys/class/pwm/pwmchip0/pwm5/duty_cycle
    echo -n "1000000" > /sys/class/pwm/pwmchip0/pwm5/period

    echo -n "37" > /sys/class/gpio/export
    echo -n "out" > /sys/class/gpio/gpio37/direction
    echo -n "0" > /sys/class/gpio/gpio37/value

    #iteracion de actuacion
    while true
    do 
	
	    variable=$(expr $(cat /sys/bus/iio/devices/iio\:device0/in_voltage0_raw) \* 120)	

	    if [ $(cat /sys/class/gpio/gpio26/value) = 1 ]
	    then 
		    echo -n "1" > /sys/class/gpio/gpio39/value #On
		    echo -n ${variable} > /sys/class/pwm/pwmchip0/pwm5/duty_cycle	

	    fi
    done



4) Escribir en un documento los datos del GPIO28 (D4) y el conversor A/D (A0). 
Luego, hacer accesible vía Web, mediante el uso de un navegador.
Nota: Usar el la entrada D4 y A0 del Shield de expansión. Además escribir 
dentro del la carpeta /www/pages/



